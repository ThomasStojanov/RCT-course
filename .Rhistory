Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# Display merged randomization lists
RandomList
# Strata 1
Center1 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center1',
block.sizes = c(1,2), #block size = 2 and 4
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 2
Center2 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center2',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 3
Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# Display merged randomization lists
RandomList
# Check if we have a ratio 1:1
RandomList$treatment %>%
summary #be careful that the number of treatment is equal to 40 in each group
# Strata 1
Center1 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center1',
block.sizes = c(1,2), #block size = 2 and 4
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 2
Center2 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center2',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 3
Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# Display merged randomization lists
RandomList
# Strata 1
Center1 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center1',
block.sizes = c(1,2), #block size = 2 and 4
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 2
Center2 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center2',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 3
Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# Display merged randomization lists
RandomList
# Display merged randomization lists
RandomList2 <- RandomList %>% head(
80
)
# Check if we have a ratio 1:1
RandomList$treatment %>%
summary #be careful that the number of treatment is equal to 40 in each group
# Strata 1
Center1 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center1',
block.sizes = c(1,2), #block size = 2 and 4
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 2
Center2 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center2',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 3
Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# Display merged randomization lists
RandomList2 <- RandomList %>% head(
80
)
# Check if we have a ratio 1:1
RandomList2$treatment %>%
summary #be careful that the number of treatment is equal to 40 in each group
write.csv2(RandomList, "randomization_list.csv", row.names = F)
Center1 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center1',
block.sizes = c(1,2), #block size = 2 and 4
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 2
Center2 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center2',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 3
Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# Display merged randomization lists
RandomList2 <- RandomList %>% head(
80
)
RandomList2
# Check if we have a ratio 1:1
RandomList2$treatment %>%
summary
Center1 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center1',
block.sizes = c(1,2), #block size = 2 and 4
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 2
Center2 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center2',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 3
Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# List for 80 patients
RandomList2 <- RandomList %>% head(
80
)
RandomList2
# Check if we have a ratio 1:1
RandomList2$treatment %>%
summary
# Strata 1
Center1 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center1',
block.sizes = c(1,2), #block size = 2 and 4
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 2
Center2 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center2',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 3
Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# List for 80 patients
RandomList2 <- RandomList %>% head(
80
)
RandomList2
# Check if we have a ratio 1:1
RandomList2$treatment %>%
summary #be careful that the number of treatment is equal to 40 in each group
plotblockrand(RandomList2)
plotblockrand(RandomList2,
"RandomList2.pdf")
# install packages
install.packages("dplyr")
install.packages("blockrand")
library(blockrand) #for randomization lists
library(dplyr) #for syntax
# Instruction: create a stratified randomization list for 3 groups, 2 treatments, with block sizes of 2 and 4 for 80 patients
# Strata 1
Center1 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center1',
block.sizes = c(1,2), #block size = 2 and 4
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 2
Center2 <- blockrand(n=26, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center2',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Strata 3
Center3 <- blockrand(n=27, #minimum number of patients
num.levels = 2,
id.prefix='patient_',
stratum = 'Center3',
block.sizes = c(1,2),
levels=c("Ttt1", "Ttt2"),
uneq.beg = F,
uneq.mid = F,
uneq.min = 0)
# Merge the 3 randomization lists
RandomList <- rbind(Center1, Center2, Center3)
# List for 80 first patients only
RandomList80 <- RandomList %>%
head(80)
RandomList80
# Check if we have a ratio 1:1
RandomList80$treatment %>%
summary #be careful that the number of treatment is equal to 40 in each group
# Save the randomization list into a csv file
write.csv2(RandomList80, "randomization_list.csv", row.names = F)
install.packages("stddiff")
library(stddiff) #for standardized difference
# creation of a fictious dataset
age <- c(18,23,41,32,25,48,59,70,90,50)
gender <- c("F","M","M","F","M","F","M","M","F","F","F")
gender <- c("F","M","M","F","M","F","M","M","F","F")
ttt <- c(0,1,0,1,0,1,0,1,0,1)
df <- data.frame(
age,
gender,
ttt
)
Agestd <- stddiff(
df,
gcol = ttt,
vcol = c(age, gender)
)
library(stddiff) #for standardized difference
Agestd <- stddiff(
df,
gcol = ttt,
vcol = c(age, gender)
)
Agestd <- stddiff.numeric(
df,
gcol = ttt,
vcol = c(age)
)
Agestd <- stddiff.numeric(
df,
gcol = ttt,
vcol = age
)
Agestd <- stddiff.numeric(
df,
gcol = ttt,
vcol = age
)
# creation of a fictious dataset for 10 patients
df <- data.frame(
as.numeric(age),
gender,
ttt
)
Agestd <- stddiff.numeric(
df,
gcol = ttt,
vcol = age
)
Agestd <- stddiff.numeric(
df,
gcol = ttt,
vcol = as.numeric(age)
)
# creation of a fictious dataset for 10 patients
df <- data.frame(
as.numeric(age),
gender,
ttt
)
Agestd <- stddiff.numeric(
df,
gcol = ttt,
vcol = as.numeric(age)
)
# creation of fictious variables for 10 patients
age <- c(18,23,41,32,25,48,59,70,90,50) %>% as.numeric()
gender <- c("F","M","M","F","M","F","M","M","F","F")
ttt <- c(0,1,0,1,0,1,0,1,0,1)
# creation of a fictious dataset for 10 patients
df <- data.frame(
age,
gender,
ttt
)
Agestd <- stddiff.numeric(
df,
gcol = ttt,
vcol = as.numeric(age)
)
df
Agestd <- stddiff.numeric(
df,
gcol,
vcol = as.numeric(age)
)
Agestd <- stddiff.numeric(
df,
gcol,
vcol
)
Agestd <- stddiff.numeric(
df,
gcol = ttt,
vcol
)
df$ttt
Agestd <- stddiff.numeric(
df,
gcol = "ttt",
vcol
)
Agestd <- stddiff.numeric(
df,
gcol = "ttt",
vcol = "age"
)
Agestd
Agestd$stddiff
Agestd <- stddiff.numeric(
df,
gcol = "ttt",
vcol = "age"
)[7]
Agestd
?stddiff
Agestd <- stddiff(
df,
gcol = "ttt",
vcol = "age"
)[7] #the seventh item of the function gives the stddiff, have a look at ?stddiff.numeric for more info
Genderstd <- stddiff.category(
df,
gcol = "ttt", #variable treatment
vcol = "gender" #variable category
)[7]
Genderstd
Genderstd <- stddiff.binary(
df,
gcol = "ttt", #variable treatment
vcol = "gender" #variable category
)[7]
Genderstd
gender <- c("F","M","M","F","M","F","M","M","F","F") %>% as.factor
ttt <- c(0,1,0,1,0,1,0,1,0,1)
# creation of a fictious dataset for 10 patients
df <- data.frame(
age,
gender,
ttt
)
df$ttt
Agestd <- stddiff.numeric(
df,
gcol = "ttt", #variable treatment
vcol = "age" #variable numeric
)[7] #the seventh item of the function gives the stddiff, have a look at ?stddiff.numeric for more info
Genderstd <- stddiff.binary(
df,
gcol = "ttt", #variable treatment
vcol = "gender" #variable category
)[7]
Genderstd
Genderstd <- stddiff.binary(
df,
gcol = "ttt", #variable treatment
vcol = "gender" #variable category
)
Genderstd
Genderstd <- stddiff.category(
df,
gcol = "ttt", #variable treatment
vcol = "gender" #variable category
)
Genderstd
Genderstd
Genderstd <- stddiff.category(
df,
gcol = "ttt", #variable treatment
vcol = "gender" #variable category
)[5]
Genderstd
Genderstd <- stddiff.binary(
df,
gcol = "ttt", #variable treatment
vcol = "gender" #variable category
)[5]
Genderstd
Genderstd
